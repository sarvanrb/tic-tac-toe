{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","initialState","squares","Array","fill","xIsNext","Board","handleReset","console","log","setState","state","i","this","slice","calculateWinner","handleClick","status","winner","renderSquare","type","React","Component","Game","target","rel","href","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"uPAIA,SAASA,EAAOC,GACZ,OACI,4BACIC,UAAU,uDACVC,QAASF,EAAME,SAEdF,EAAMG,OAKnB,IAAMC,EAAe,CACjBC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAGPC,E,YACF,WAAYT,GAAQ,IAAD,8BACf,4CAAMA,KAyBVU,YAAc,WACVC,QAAQC,IAAI,uBACZ,EAAKC,SAAL,eAAmBT,KA1BnB,EAAKU,MAAQV,EAFE,E,yEAKPW,GACR,IAAMV,EAAUW,KAAKF,MAAMT,QAAQY,QAC/BC,EAAgBb,IAAYA,EAAQU,KAGxCV,EAAQU,GAAKC,KAAKF,MAAMN,QAAU,IAAM,IACxCQ,KAAKH,SAAS,CACVR,QAASA,EACTG,SAAUQ,KAAKF,MAAMN,a,mCAIhBO,GAAI,IAAD,OACZ,OACI,kBAAChB,EAAD,CACII,MAAOa,KAAKF,MAAMT,QAAQU,GAC1Bb,QAAS,kBAAM,EAAKiB,YAAYJ,Q,+BAUlC,IAEFK,EAFC,OACCC,EAASH,EAAgBF,KAAKF,MAAMT,SAS1C,OANIe,EADAC,EACS,WAAaA,EAEb,oBAAsBL,KAAKF,MAAMN,QAAU,IAAM,KAK1D,6BACI,yBAAKP,UAAU,yCACVmB,GAEL,yBAAKnB,UAAU,aACVe,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAEvB,yBAAKrB,UAAU,aACVe,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAEvB,yBAAKrB,UAAU,aACVe,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,IAEvB,yBAAKrB,UAAU,qCACX,4BACIsB,KAAK,SACLtB,UAAU,6BACVC,QAAS,kBAAM,EAAKQ,gBAHxB,e,GA/DAc,IAAMC,WA4EpBC,E,iLAEE,OACI,yBAAKzB,UAAU,kBACX,wBAAIA,UAAU,6DAAd,eAGA,2BAAOA,UAAU,2DACb,uBACI0B,OAAO,SACPC,IAAI,sBACJC,KAAK,4CAHT,iBAQJ,yBAAK5B,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6CACX,kBAACQ,EAAD,c,GAnBTe,IAAMC,WA4BzB,SAASP,EAAgBb,GAWrB,IAVA,IAAMyB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CAAC,IAAD,cACjBe,EAAMf,GADW,GAC5BiB,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GACI7B,EAAQ2B,IACR3B,EAAQ2B,KAAO3B,EAAQ4B,IACvB5B,EAAQ2B,KAAO3B,EAAQ6B,GAEvB,OAAO7B,EAAQ2B,GAGvB,OAAO,KAIXG,IAASC,OAAO,kBAACV,EAAD,MAAUW,SAASC,eAAe,U","file":"static/js/main.26753fc1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square rounded-sm border-info m-1 text-white bg-info\"\r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nconst initialState = {\r\n    squares: Array(9).fill(null),\r\n    xIsNext: true\r\n};\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.state.squares[i]}\r\n                onClick={() => this.handleClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    handleReset = () => {\r\n        console.log(\"reset button called\");\r\n        this.setState({ ...initialState });\r\n    };\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {\r\n            status = \"Turn of player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n        // const status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status d-flex justify-content-center \">\r\n                    {status}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\" btn btn-lg btn-danger m-5\"\r\n                        onClick={() => this.handleReset()}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game  mt-5 p-5\">\r\n                <h1 className=\" game-title d-flex justify-content-center text-info  mb-2\">\r\n                    Tic Tac Toe\r\n                </h1>\r\n                <small className=\"small-text d-flex justify-content-center text-info mb-3\">\r\n                    <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.wikihow.com/Play-Tic-Tac-Toe\"\r\n                    >\r\n                        How to play?\r\n                    </a>\r\n                </small>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"d-flex justify-content-center game-board \">\r\n                            <Board />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (\r\n            squares[a] &&\r\n            squares[a] === squares[b] &&\r\n            squares[a] === squares[c]\r\n        ) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}